{"ast":null,"code":"var _jsxFileName = \"/Users/juttat/Desktop/getalife/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import SearchButton from './components/SearchButton';\n\nimport Random from './components/Random';\nimport SearchContainer from './components/SearchContainer';\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\nclass App extends Component {\n  constructor() {\n    super(); // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n    // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      funs: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    // fetch tekee http-requestin\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState({\n        funs: users\n      });\n    });\n  } // nimi on keksitty, ei varattu\n\n\n  render() {\n    const filteredFuns = this.state.funs.filter(fun => {\n      return fun.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    }); // if else sitä varten että kestää kauan ladata, ei muuta syytä! Voi siis jättää pois\n\n    if (this.state.funs.length === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        funs: filteredFuns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/juttat/Desktop/getalife/src/App.js"],"names":["React","Random","SearchContainer","App","Component","constructor","onSearchChange","event","setState","searchfield","target","value","state","funs","componentDidMount","fetch","then","response","json","users","render","filteredFuns","filter","fun","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA;;;;;;;;;;;;AAaA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAC1BC,EAAAA,WAAW,GAAG;AACV,YADU,CAEV;AACA;;AAHU,SAuBdC,cAvBc,GAuBIC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAzBa;;AAIV,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETJ,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHD,EAICF,IAJD,CAIMG,KAAK,IAAI;AACX,WAAKX,QAAL,CAAc;AAAEK,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACH,KAND;AAQH,GArByB,CAuB1B;;;AAKAC,EAAAA,MAAM,GAAG;AACL,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,MAAhB,CAAuBC,GAAG,IAAG;AAC9C,aAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAhC,CAAP;AACH,KAFoB,CAArB,CADK,CAIL;;AACA,QAAI,KAAKb,KAAL,CAAWC,IAAX,CAAgBc,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAGK;AACD,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEe,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CADJ;AASH;AAEJ;;AAhDyB;;AAoD5B,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n// import SearchButton from './components/SearchButton';\nimport Random from './components/Random';\nimport SearchContainer from './components/SearchContainer';\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\n\nclass App extends Component {\n  constructor() {\n      super()\n      // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n      // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n      this.state = {\n          funs: [],\n          searchfield: ''\n      }\n  }\n\n  componentDidMount() {\n      // fetch tekee http-requestin\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n          return response.json();\n      })\n      .then(users => {\n          this.setState({ funs: users })\n      });\n      \n  }\n\n  // nimi on keksitty, ei varattu\n  onSearchChange = (event) => {\n      this.setState({ searchfield: event.target.value })\n  }\n\n  render() {\n      const filteredFuns = this.state.funs.filter(fun =>{\n          return fun.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n      })\n      // if else sitä varten että kestää kauan ladata, ei muuta syytä! Voi siis jättää pois\n      if (this.state.funs.length === 0) {\n          return <h1>Loading...</h1>\n      }\n      else {\n          return (\n              <div className='container'>\n                  <h1>RoboFriends</h1>\n                  <SearchBox searchChange={this.onSearchChange}/>\n                  <Scroll>\n                      <CardList funs={filteredFuns}/>\n                  </Scroll>\n              </div>\n          );\n      }\n      \n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
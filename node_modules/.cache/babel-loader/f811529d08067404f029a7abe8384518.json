{"ast":null,"code":"var _jsxFileName = \"/Users/juttat/Desktop/getalife/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Random from './components/Random';\nimport FunList from './components/FunList';\nimport SearchContainer from './components/SearchContainer';\nimport SearchField from './components/SearchField';\nimport Time from './components/Time';\nimport CategoriesSearch from './components/CategoriesSearch';\nimport { funs } from './funExample'; // import SearchContainer from './components/SearchContainer';\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\nclass App extends Component {\n  constructor() {\n    super(); // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n    // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchvalue: event.target.value\n      });\n    };\n\n    this.onRandomChange = event => {\n      this.setState({\n        random: true\n      });\n    };\n\n    this.state = {\n      funs: [],\n      searchvalue: '',\n      isHidden: true,\n      random: false\n    };\n  }\n\n  componentDidMount() {\n    // fetch tekee http-requestin\n\n    /* fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n        return response.json();\n    })\n    .then(users => {\n        \n    }); */\n    this.setState({\n      funs: funs\n    });\n  }\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden\n    });\n  } // nimi on keksitty, ei varattu\n\n\n  render() {\n    // muuttuja randomFun joka ei filtteröi vaan näyttää idn joka random\n    // const randomFun = this.state.funs.id hmm... \n    const filteredFuns = this.state.funs.filter(fun => {\n      // muuttujat näille: \n      // fun.name.toLowerCase()\n      // fun.description.toLowerCase()\n      // fun.category.toLowerCase()\n      // fun.duration.toLowerCase()\n      // yhdistä sitten stringit yhdeksi josta haet\n      const funName = fun.name.toLowerCase();\n      const funDescription = fun.description.toLowerCase();\n      const funValues = funName.concat(funDescription);\n\n      if (random === true) {\n        return funValues.includes(this.state.searchvalue.toLowerCase());\n      }\n    }); // if else sitä varten että kestää kauan ladata, ei muuta syytä! Voi siis jättää pois\n\n    if (this.state.funs.length === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Random, {\n        randomChange: this.onRandomChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.toggleHidden.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Choose your own life >\"), !this.state.isHidden && React.createElement(SearchContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(SearchField, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Time, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(CategoriesSearch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(FunList, {\n        funs: filteredFuns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/juttat/Desktop/getalife/src/App.js"],"names":["React","Component","Header","Random","FunList","SearchContainer","SearchField","Time","CategoriesSearch","funs","App","constructor","onSearchChange","event","setState","searchvalue","target","value","onRandomChange","random","state","isHidden","componentDidMount","toggleHidden","render","filteredFuns","filter","fun","funName","name","toLowerCase","funDescription","description","funValues","concat","includes","length","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Random from './components/Random';\nimport FunList from './components/FunList';\nimport SearchContainer from './components/SearchContainer';\nimport SearchField from './components/SearchField';\nimport Time from './components/Time';\nimport CategoriesSearch from './components/CategoriesSearch';\nimport { funs } from './funExample';\n// import SearchContainer from './components/SearchContainer';\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\n\nclass App extends Component {\n  constructor() {\n      super()\n      // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n      // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n      this.state = {\n          funs: [],\n          searchvalue: '',\n          isHidden: true,\n          random: false\n      }\n  }\n\n  componentDidMount() {\n      // fetch tekee http-requestin\n      /* fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n          return response.json();\n      })\n      .then(users => {\n          \n      }); */\n      this.setState({ funs: funs })\n  }\n\n  toggleHidden () {\n    this.setState({\n      isHidden: !this.state.isHidden\n    })\n  }\n\n  // nimi on keksitty, ei varattu\n  onSearchChange = (event) => {\n      this.setState({ searchvalue: event.target.value })\n  }\n\n  onRandomChange = (event) => {\n    this.setState({ random: true })\n  }\n\n  render() {\n      \n    // muuttuja randomFun joka ei filtteröi vaan näyttää idn joka random\n    // const randomFun = this.state.funs.id hmm... \n    \n    const filteredFuns = this.state.funs.filter(fun => {\n        \n          // muuttujat näille: \n          // fun.name.toLowerCase()\n          // fun.description.toLowerCase()\n          // fun.category.toLowerCase()\n          // fun.duration.toLowerCase()\n          \n          // yhdistä sitten stringit yhdeksi josta haet\n\n          const funName = fun.name.toLowerCase();\n          const funDescription = fun.description.toLowerCase();\n          const funValues = funName.concat(funDescription);\n\n          if (random === true) {\n            return funValues.includes(this.state.searchvalue.toLowerCase());\n          }\n\n          \n      })\n\n\n      // if else sitä varten että kestää kauan ladata, ei muuta syytä! Voi siis jättää pois\n      if (this.state.funs.length === 0) {\n          return <h1>Loading...</h1>\n      }\n      else {\n          return (\n              <div className='container'>\n                  \n                  <Header />\n\n                  <Random randomChange={this.onRandomChange} /> \n\n                  <div>\n                    <a onClick={this.toggleHidden.bind(this)} >\n                      Choose your own life >\n                    </a>\n                    {!this.state.isHidden && \n                      <SearchContainer>\n                        <SearchField searchChange={this.onSearchChange}/>\n                        <Time />\n                        <CategoriesSearch />\n                      </SearchContainer>\n                    }\n                  </div>\n\n                  <FunList funs={filteredFuns}/>\n                  \n              </div>\n          );\n      }\n      \n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
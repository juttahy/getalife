{"ast":null,"code":"var _jsxFileName = \"/Users/juttat/Desktop/getalife/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Random from './components/Random';\nimport FunList from './components/FunList';\nimport SearchContainer from './components/SearchContainer';\nimport SearchField from './components/SearchField';\nimport Time from './components/Time';\nimport CategoriesSearch from './components/CategoriesSearch';\nimport { funs } from './funExample';\nimport Footer from './components/Footer';\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\nclass App extends Component {\n  constructor() {\n    super(); // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n    // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchvalue: event.target.value\n      });\n    };\n\n    this.onRandomChange = event => {\n      // muuttuja arraylle johon kerätään id:t arvontaa varten\n      let idList = []; // funktio jolla luodaan array id:istä\n\n      function makeIdArray() {\n        for (let i = 0; i < funs.length; i++) {\n          idList.push(funs[i].id);\n        }\n\n        return idList;\n      }\n\n      makeIdArray(); // funktio jolla arvotaan random id listasta\n\n      function makeRandomId(idArray) {\n        return idArray[Math.floor(Math.random() * idArray.length)];\n      }\n\n      let randomId = makeRandomId(idList);\n      this.setState({\n        random: randomId,\n        showRandom: true,\n        isHidden: true\n      });\n    };\n\n    this.state = {\n      funs: [],\n      searchvalue: '',\n      isHidden: true,\n      random: 0,\n      showRandom: false\n    };\n  }\n\n  componentDidMount() {\n    // fetch tekee http-requestin\n\n    /* fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n        return response.json();\n    })\n    .then(users => {\n        \n    }); */\n    this.setState({\n      funs: funs\n    });\n  }\n\n  toggleHidden() {\n    this.setState({\n      isHidden: !this.state.isHidden,\n      showRandom: false\n    });\n\n    if (this.state.isHidden) {\n      this.setState({\n        searchvalue: ''\n      });\n    }\n  } // nimi on keksitty, ei varattu\n\n\n  render() {\n    const filteredFuns = this.state.funs.filter(fun => {\n      const funName = fun.name.toLowerCase();\n      const funDescription = fun.description.toLowerCase(); // yhdistetään nimi ja kuvaus yhdeksi stringiksi hakua varten\n\n      const funValues = funName.concat(funDescription);\n      return funValues.includes(this.state.searchvalue.toLowerCase());\n    });\n    const randomFuns = this.state.funs.filter(fun => {\n      // palauttaa funin jonka id on sama kuin nykyisen staten random\n      return fun.id === this.state.random;\n    });\n    let displayFuns = filteredFuns;\n\n    if (this.state.showRandom) {\n      displayFuns = randomFuns;\n    } else {\n      displayFuns = filteredFuns;\n    } // if else sitä varten että kestää kauan ladata, ei muuta syytä. Muokkaa myöhemmin paremmaks\n\n\n    if (this.state.funs.length === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Random, {\n        randomChange: this.onRandomChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"searchLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.toggleHidden.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Choose your own life >\")), !this.state.isHidden && React.createElement(SearchContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(SearchField, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), React.createElement(FunList, {\n        funs: displayFuns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/juttat/Desktop/getalife/src/App.js"],"names":["React","Component","Header","Random","FunList","SearchContainer","SearchField","Time","CategoriesSearch","funs","Footer","App","constructor","onSearchChange","event","setState","searchvalue","target","value","onRandomChange","idList","makeIdArray","i","length","push","id","makeRandomId","idArray","Math","floor","random","randomId","showRandom","isHidden","state","componentDidMount","toggleHidden","render","filteredFuns","filter","fun","funName","name","toLowerCase","funDescription","description","funValues","concat","includes","randomFuns","displayFuns","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Random from './components/Random';\nimport FunList from './components/FunList';\nimport SearchContainer from './components/SearchContainer';\nimport SearchField from './components/SearchField';\nimport Time from './components/Time';\nimport CategoriesSearch from './components/CategoriesSearch';\nimport { funs } from './funExample';\nimport Footer from './components/Footer';\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Get a Life</h1>\n        <Random /> \n      </header>\n      <SearchContainer />\n    </div>\n  );\n} */\n\n\nclass App extends Component {\n  constructor() {\n      super()\n      // this.state on se joka muuttuu ohjelmassa dynaamisesti, \n      // tässä robotti-array (joka aluksi tyhjä) ja hakukenttä\n      this.state = {\n          funs: [],\n          searchvalue: '',\n          isHidden: true,\n          random: 0,\n          showRandom: false\n      }\n  }\n\n  componentDidMount() {\n      // fetch tekee http-requestin\n      /* fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n          return response.json();\n      })\n      .then(users => {\n          \n      }); */\n      this.setState({ funs: funs })\n  }\n\n  toggleHidden () {\n    this.setState({\n      isHidden: !this.state.isHidden,\n      showRandom: false \n    })\n    if (this.state.isHidden) {\n      this.setState ({\n        searchvalue: ''\n      })\n    }\n  }\n\n  // nimi on keksitty, ei varattu\n  onSearchChange = (event) => {\n      this.setState({ searchvalue: event.target.value })\n  }\n\n  onRandomChange = (event) => {\n               \n        // muuttuja arraylle johon kerätään id:t arvontaa varten\n        let idList = [];\n        \n        // funktio jolla luodaan array id:istä\n        function makeIdArray() {\n            for (let i=0; i<funs.length; i++) {\n                idList.push(funs[i].id);\n            }\n            return idList;\n        }\n        \n        makeIdArray();\n        \n        // funktio jolla arvotaan random id listasta\n        function makeRandomId(idArray) {        \n          return idArray[Math.floor(Math.random()*idArray.length)];                \n        }\n\n        let randomId = makeRandomId(idList);\n\n        this.setState({ random: randomId, showRandom: true, isHidden: true })\n\n  }\n\n  render() {\n    \n    const filteredFuns = this.state.funs.filter(fun => {\n        \n          const funName = fun.name.toLowerCase();\n          const funDescription = fun.description.toLowerCase();\n          // yhdistetään nimi ja kuvaus yhdeksi stringiksi hakua varten\n          const funValues = funName.concat(funDescription);\n          \n          return funValues.includes(this.state.searchvalue.toLowerCase());\n          \n      })\n    \n    const randomFuns = this.state.funs.filter(fun => {\n      // palauttaa funin jonka id on sama kuin nykyisen staten random\n      return fun.id === this.state.random;\n\n    })\n    \n    let displayFuns = filteredFuns;\n\n    if (this.state.showRandom) {\n      displayFuns = randomFuns;\n    } else {\n      displayFuns = filteredFuns;\n    }\n    \n\n      // if else sitä varten että kestää kauan ladata, ei muuta syytä. Muokkaa myöhemmin paremmaks\n      if (this.state.funs.length === 0) {\n          return <h1>Loading...</h1>\n      }\n      else {\n          return (\n              \n              <div className='container'>\n                  \n                  <Header />\n\n                  <Random randomChange={this.onRandomChange} /> \n\n                  <div>\n                    <div className='searchLink'>\n                      <a onClick={this.toggleHidden.bind(this)} >\n                        Choose your own life >\n                      </a>\n                      </div>\n                    {!this.state.isHidden && \n                      <SearchContainer>                        \n                        <SearchField searchChange={this.onSearchChange}/>                                               \n                      </SearchContainer>\n                    }\n                  </div>\n\n                  <FunList funs={displayFuns}/>\n\n                  <Footer />\n                \n              </div>\n \n          );\n      }\n      \n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
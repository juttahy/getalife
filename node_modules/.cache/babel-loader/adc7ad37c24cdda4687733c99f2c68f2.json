{"ast":null,"code":"var _jsxFileName = \"/Users/juttat/Desktop/getalife/src/components/Random.js\";\n// Nappula ja siihen liittyvä arvontatoiminnallisuus, arpoo indeksin, jonka perusteella Funlist päivittyy\n// tee tämä vasta lopuksi\nimport React from 'react';\nimport './random.css';\nimport { funs } from '../funExample';\n\nfunction Searchbutton() {\n  // luo array kaikista id:stä\n  // arvo joku noista id:stä muuttujan randomId arvoksi\n  // muuttuja jonka arvo on joku luku. Tätä lukua sitten käytetään filtteröintiin, näytetään vain tämän id:n fun \n  // const randomId = makeRandomId();\n  function makeRandomId(idArray) {\n    return idArray[Math.floor(Math.random() * idArray.length)];\n  } // let idList = [254, 45, 212, 365, 2543];\n\n\n  let idList = [];\n  console.log(funs[0].id);\n  console.log(funs);\n\n  function makeIdArray() {\n    for (let i = 0; i < funs.length; i++) {\n      idList.push(funs[i].id);\n    }\n\n    return idList;\n  }\n\n  makeIdArray();\n  console.log(idList);\n  let randomId = makeRandomId(idList);\n  console.log(randomId);\n  return React.createElement(\"button\", {\n    className: \"random\",\n    onClick: randomId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Random Life Generator\");\n}\n\nexport default Searchbutton;","map":{"version":3,"sources":["/Users/juttat/Desktop/getalife/src/components/Random.js"],"names":["React","funs","Searchbutton","makeRandomId","idArray","Math","floor","random","length","idList","console","log","id","makeIdArray","i","push","randomId"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,eAArB;;AAIA,SAASC,YAAT,GAAwB;AACpB;AACA;AAEA;AACA;AAEA,WAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAE3B,WAAOA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,OAAO,CAACI,MAAjC,CAAD,CAAd;AAEH,GAXmB,CAahB;;;AACJ,MAAIC,MAAM,GAAG,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAAC,CAAD,CAAJ,CAAQW,EAApB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AAEA,WAASY,WAAT,GAAuB;AACnB,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACb,IAAI,CAACO,MAArB,EAA6BM,CAAC,EAA9B,EAAkC;AAC9BL,MAAAA,MAAM,CAACM,IAAP,CAAYd,IAAI,CAACa,CAAD,CAAJ,CAAQF,EAApB;AACH;;AACD,WAAOH,MAAP;AACH;;AAEDI,EAAAA,WAAW;AACXH,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,MAAIO,QAAQ,GAAGb,YAAY,CAACM,MAAD,CAA3B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAEA,SACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ;AAGH;;AAED,eAAed,YAAf","sourcesContent":["// Nappula ja siihen liittyvä arvontatoiminnallisuus, arpoo indeksin, jonka perusteella Funlist päivittyy\n// tee tämä vasta lopuksi\n\nimport React from 'react';\nimport './random.css';\nimport { funs } from '../funExample';\n\n\n\nfunction Searchbutton() {\n    // luo array kaikista id:stä\n    // arvo joku noista id:stä muuttujan randomId arvoksi\n    \n    // muuttuja jonka arvo on joku luku. Tätä lukua sitten käytetään filtteröintiin, näytetään vain tämän id:n fun \n    // const randomId = makeRandomId();\n\n    function makeRandomId(idArray) {\n  \n        return idArray[Math.floor(Math.random()*idArray.length)];\n            \n    }\n\n        // let idList = [254, 45, 212, 365, 2543];\n    let idList = [];\n    console.log(funs[0].id);\n    console.log(funs);\n\n    function makeIdArray() {\n        for (let i=0; i<funs.length; i++) {\n            idList.push(funs[i].id);\n        }\n        return idList;\n    }\n    \n    makeIdArray();\n    console.log(idList);\n\n    let randomId = makeRandomId(idList);\n\n    console.log(randomId);\n    \n    return (\n        <button className='random' onClick={randomId}>Random Life Generator</button>\n    );\n}\n\nexport default Searchbutton;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/juttat/Desktop/getalife/src/components/Random.js\";\n// Nappula ja siihen liittyvä arvontatoiminnallisuus, arpoo indeksin, jonka perusteella Funlist päivittyy\n// tee tämä vasta lopuksi\nimport React from 'react';\nimport './random.css';\nimport { funs } from '../funExample';\n\nconst Random = ({\n  randomChange\n}) => {\n  // luo array kaikista id:stä\n  // arvo joku noista id:stä muuttujan randomId arvoksi\n  // muuttuja jonka arvo on joku luku. Tätä lukua sitten käytetään filtteröintiin, näytetään vain tämän id:n fun \n  // const randomId = makeRandomId();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"random\",\n    onClick: randomChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Random Life Generator\"));\n};\n\nfunction makeRandomId(idArray) {\n  return idArray[Math.floor(Math.random() * idArray.length)];\n} // let idList = [254, 45, 212, 365, 2543];\n\n\nlet idList = [];\nconsole.log(funs[0].id);\nconsole.log(funs);\n\nfunction makeIdArray() {\n  for (let i = 0; i < funs.length; i++) {\n    idList.push(funs[i].id);\n  }\n\n  return idList;\n}\n\nmakeIdArray();\nconsole.log(idList);\nlet randomId = makeRandomId(idList);\nconsole.log(randomId);\nexport const test = 8;\nexport default Random;","map":{"version":3,"sources":["/Users/juttat/Desktop/getalife/src/components/Random.js"],"names":["React","funs","Random","randomChange","makeRandomId","idArray","Math","floor","random","length","idList","console","log","id","makeIdArray","i","push","randomId","test"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,IAAT,QAAqB,eAArB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACjC;AACA;AAEA;AACA;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ;AAKH,CAfD;;AAiBA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAE3B,SAAOA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,OAAO,CAACI,MAAjC,CAAD,CAAd;AAEH,C,CAEG;;;AACJ,IAAIC,MAAM,GAAG,EAAb;AACAC,OAAO,CAACC,GAAR,CAAYX,IAAI,CAAC,CAAD,CAAJ,CAAQY,EAApB;AACAF,OAAO,CAACC,GAAR,CAAYX,IAAZ;;AAEA,SAASa,WAAT,GAAuB;AACnB,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACd,IAAI,CAACQ,MAArB,EAA6BM,CAAC,EAA9B,EAAkC;AAC9BL,IAAAA,MAAM,CAACM,IAAP,CAAYf,IAAI,CAACc,CAAD,CAAJ,CAAQF,EAApB;AACH;;AACD,SAAOH,MAAP;AACH;;AAEDI,WAAW;AACXH,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,IAAIO,QAAQ,GAAGb,YAAY,CAACM,MAAD,CAA3B;AAEAC,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAb;AACP,eAAehB,MAAf","sourcesContent":["// Nappula ja siihen liittyvä arvontatoiminnallisuus, arpoo indeksin, jonka perusteella Funlist päivittyy\n// tee tämä vasta lopuksi\n\nimport React from 'react';\nimport './random.css';\nimport { funs } from '../funExample';\n\n\n\nconst Random = ({ randomChange }) => {\n    // luo array kaikista id:stä\n    // arvo joku noista id:stä muuttujan randomId arvoksi\n    \n    // muuttuja jonka arvo on joku luku. Tätä lukua sitten käytetään filtteröintiin, näytetään vain tämän id:n fun \n    // const randomId = makeRandomId();\n\n    \n    \n    \n    return (\n        <div>\n            <button className='random' onClick={randomChange}>Random Life Generator</button>\n        </div>\n    );\n}\n\nfunction makeRandomId(idArray) {\n  \n    return idArray[Math.floor(Math.random()*idArray.length)];\n        \n}\n\n    // let idList = [254, 45, 212, 365, 2543];\nlet idList = [];\nconsole.log(funs[0].id);\nconsole.log(funs);\n\nfunction makeIdArray() {\n    for (let i=0; i<funs.length; i++) {\n        idList.push(funs[i].id);\n    }\n    return idList;\n}\n\nmakeIdArray();\nconsole.log(idList);\n\nlet randomId = makeRandomId(idList);\n\nconsole.log(randomId);\n\nexport const test = 8;\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}